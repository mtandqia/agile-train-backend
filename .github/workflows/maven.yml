name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build & Push Docker Image To Aliyun Docker Hub
        id: buildAndPushImage
        uses: risfeng/docker-image-build-push-action@v1.0
        with:
          registry_url: 'registry.cn-shanghai.aliyuncs.com'
          namespaces: 'agile_train'
          repository_name: 'agile_train'
          user_name: ${{ secrets.ALIYUN_IMAGES_HUB_USER_NAME }}
          password: ${{ secrets.ALIYUN_IMAGES_HUB_PASSWORD }}
          image_version: 'latest'
          docker_file: '.'

      - name: Get Pre Step Result Output image_pull_url
        run: echo "The url was ${{ steps.buildAndPushImage.outputs.image_pull_url }}"

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: 106.14.139.101
          username: root
          password: ${{ secrets.PWD }}
          command_timeout: '30m'
          script: |
            cd /root/lmt/dockerProject
            service docker start
            docker stop mytrain
            docker rm mytrain
            docker rmi ${{ steps.buildAndPushImage.outputs.image_pull_url }}
            docker login --username=${{ secrets.ALIYUN_IMAGES_HUB_USER_NAME }} --password=${{ secrets.ALIYUN_IMAGES_HUB_PASSWORD }} registry.cn-shanghai.aliyuncs.com
            docker pull ${{ steps.buildAndPushImage.outputs.image_pull_url }}
            docker run --name mytrain -d -p 8080:8080 -v /root/lmt/file:/root/lmt/file ${{ steps.buildAndPushImage.outputs.image_pull_url }}
